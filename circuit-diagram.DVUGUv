%!PS-Adobe-3.0 EPSF-3.0
%%Title: XC7714.DVUGUv
%%Creator: XCircuit v3.7 rev40
%%CreationDate: Mon May  5 15:52:32 2014
%%Pages: 1
%%BoundingBox: 68 68 1363 1627
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/analog::resistor {
begingate
1 1.000 0 64 0 36 2 polygon
1 1.000 0 -64 0 -36 2 polygon
1 1.000 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def

/analog::diode {
begingate
248 1.000 -18 -16 0 16 18 -16 3 polygon
1 1.000 0 -48 0 -16 2 polygon
1 1.000 0 48 0 16 2 polygon
1 1.000 -18 16 18 16 2 polygon
1.000 0.000 0.000 scb
(d.m) {/Times-Roman cf} 2 9 0 1.000 0 48 pinlabel
(d.p) {/Times-Roman cf} 2 13 0 1.000 0 -48 pinlabel
endgate
} def


%%EndSetup

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 8.00 gridspace
1.0000 inchscale
2.6000 setlinewidth 1504 2816 translate

0 1.000 -288 160 -288 -560 176 -560 176 160 4 polygon
0 1.000 16 160 16 32 112 32 112 160 4 polygon
0 1.000 -288 -64 -288 -320 -240 -320 -240 -64 4 polygon
0 1.000 -288 -336 -288 -544 -240 -544 -240 -336 4 polygon
0 1.000 176 -544 176 -304 144 -304 144 -544 4 polygon
0 1.000 176 -272 176 -16 144 -16 144 -272 4 polygon
(Arduino) {/Helvetica cf} 2 16 0 1.000 -144 -144 label
1 1.000 -264 -160 -1144 -160 -1144 -832 -1144 -848 4 polygon
0 1.000 -1216 -800 -1216 -832 1072 -832 1072 -800 4 polygon
0 1.000 1072 -832 1072 -864 -1216 -864 -1216 -832 4 polygon
(5V) {/Helvetica cf} 2 16 0 1.000 -360 -144 label
(+) {/Helvetica cf} 2 16 0 1.000 -1248 -864 label
(-) {/Helvetica cf} 2 16 0 1.000 -1248 -832 label
0 1.000 -1312 -784 -1312 -1648 1152 -1648 1152 -784 4 polygon
1 1.000 -264 -192 -1112 -192 -1112 -816 3 polygon
(GND) {/Helvetica cf} 2 16 0 1.000 -384 -240 label
(MIDI Connector) {/Helvetica cf} 2 16 0 1.000 -1056 -1264 label
0 1.000 -1088 -1168 -1088 -1424 -752 -1424 -752 -1168 4 polygon
1 1.000 -976 -1296 -1056 -1360 -1056 -1440 3 polygon
1 1.000 -848 -1296 -768 -1360 -768 -1440 3 polygon
1 1.000 -912 -1296 -912 -1472 2 polygon
1 1.000 -944 -1312 -1008 -1392 -1008 -1488 3 polygon
1 1.000 -864 -1312 -816 -1376 -816 -1488 3 polygon
0 1.000 -1216 -1568 -1216 -1600 1072 -1600 1072 -1568 4 polygon
0 1.000 -1216 -1600 -1216 -1632 1072 -1632 1072 -1600 4 polygon
(+) {/Helvetica cf} 2 16 0 1.000 -1248 -1624 label
(-) {/Helvetica cf} 2 16 0 1.000 -1248 -1592 label
1 1.000 1024 -816 1136 -816 1136 -1584 1024 -1584 4 polygon
1 1.000 1024 -1616 1096 -1616 1096 -848 1024 -848 4 polygon
(TX \(1\)) {/Helvetica cf} 2 16 0 1.000 224 -480 label
1 1.000 -912 -1472 -920 -1576 2 polygon
1.000 90 -1072 -1488 analog::resistor
1 1.000 -1136 -1488 -1144 -1616 2 polygon
(220 ) {/Helvetica cf} 2 16 0 1.000 -1104 -1536 label
1 1.000 -488 -1160 90 0.000 360.000 xcarc
(ppotentiiometer) {/Helvetica cf} 2 16 0 1.000 -552 -1160 label
1 1.000 -416 -1112 -288 -1056 2 polygon
1 1.000 -432 -1232 -288 -1296 2 polygon
1 1.000 -288 -1056 -288 -816 2 polygon
1 1.000 -288 -1296 -288 -1616 2 polygon
1 1.000 -400 -1184 -344 -1184 -344 -496 -264 -496 4 polygon
(A4) {/Helvetica cf} 2 16 0 1.000 -344 -480 label
(Breadboard) {/Helvetica cf} 2 16 270 1.000 -1264 -1256 label
1 1.000 160 -200 104 -200 104 -1192 64 -1192 4 polygon
1 1.000 160 -168 80 -168 80 -1120 32 -1120 4 polygon
1 1.000 0 -1072 48 -1072 48 -144 160 -144 4 polygon
(9) {/Helvetica cf} 2 16 0 1.000 200 -216 label
(10) {/Helvetica cf} 2 16 0 1.000 184 -184 label
(11) {/Helvetica cf} 2 16 0 1.000 192 -152 label
1.000 180 -136 -1368 analog::diode
1.000 180 -64 -1368 analog::diode
1.000 180 16 -1368 analog::diode
1.000 0 -136 -1256 analog::resistor
1.000 0 -64 -1256 analog::resistor
1.000 0 16 -1256 analog::resistor
1 1.000 64 -1192 16 -1192 2 polygon
1 1.000 40 -1120 -64 -1120 -64 -1200 3 polygon
1 1.000 -136 -1200 -136 -1072 8 -1072 3 polygon
1 1.000 -136 -1416 -136 -1584 2 polygon
1 1.000 -64 -1408 -64 -1584 2 polygon
1 1.000 16 -1400 16 -1584 2 polygon
(220) {/Helvetica cf} 2 16 270 1.000 -160 -1288 label
(220) {/Helvetica cf} 2 16 270 1.000 -80 -1288 label
(220) {/Helvetica cf} 2 16 270 1.000 0 -1288 label
0 1.000 1648 -1064 1648 1512 1800 1512 1800 -1064 4 polygon
0 1.000 1696 1464 1696 -1000 1752 -1000 1752 1464 4 polygon
1 1.000 1680 -1064 1680 -1152 2 polygon
1 1.000 1720 -1064 1720 -1152 2 polygon
1 1.000 1768 -1064 1768 -1152 2 polygon
(500mm SoftPot Membrane Potentiometer) {/Helvetica cf} 2 16 270 1.000 1784 
-1048 label
0 1.000 1408 -1888 1408 -2624 2120 -2624 2120 -1888 4 polygon
(Force Sensitive Resistance) {/Helvetica cf} 2 16 0 1.000 1432 -1944 label
0 1.000 1728 -1520 1728 -1888 1808 -1888 1808 -1520 4 polygon
1 1.000 1744 -1440 1744 -1520 2 polygon
1 1.000 1784 -1432 1784 -1520 2 polygon
1 1.000 160 -496 552 -496 552 -1760 -720 -1760 -816 -1488 5 polygon
1 1.000 1744 -1440 1320 -1440 1320 -1728 856 -1728 856 -1616 5 polygon
1 1.000 1784 -1432 1784 -1384 752 -1384 3 polygon
1.000 0 752 -1448 analog::resistor
(10 KOhms) {/Helvetica cf} 2 16 270 1.000 720 -1536 label
1 1.000 752 -1592 752 -1512 2 polygon
1 1.000 776 -1384 776 -432 -264 -432 3 polygon
1 1.000 -272 -520 -120 -520 -120 -376 1376 -376 1376 -1216 1720 -1216 1720 
-1144 7 polygon
(A5) {/Helvetica cf} 2 16 0 1.000 -344 -536 label
(A3) {/Helvetica cf} 2 16 0 1.000 -344 -424 label
1 1.000 1768 -1144 1768 -1264 984 -1264 984 -848 4 polygon
1 1.000 1680 -1152 1240 -1152 1240 -704 888 -704 888 -816 5 polygon
(USB) {/Helvetica cf} 2 16 0 1.000 24 104 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
